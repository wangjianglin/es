apply plugin: "com.android.library"
apply plugin: 'maven'

buildscript {
    repositories {
        maven{ url 'https://repo.cess.io/repository/android/'}
        mavenLocal()
        jcenter()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url "$rootDir/../node_modules/react-native/android"
        }
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.4'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

repositories {
    maven{ url 'https://repo.cess.io/repository/android/'}
    mavenLocal()
    jcenter()
    maven {
        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
        url "$rootDir/../node_modules/react-native/android"
    }
    google()
}


def enableSeparateBuildPerCPUArchitecture = false
//
///**
// * Run Proguard to shrink the Java bytecode in release builds.
// */
def enableProguardInReleaseBuilds = false


android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }
    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            include "armeabi-v7a", "x86"
        }
    }
    buildTypes {
        release {
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    lintOptions{
        abortOnError false
    }
    // applicationVariants are e.g. debug, release
    // applicationVariants.all { variant ->
    //     variant.outputs.each { output ->
    //         // For each separate APK per architecture, set a unique version code as described here:
    //         // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
    //         def versionCodes = ["armeabi-v7a":1, "x86":2]
    //         def abi = output.getFilter(OutputFile.ABI)
    //         if (abi != null) {  // null for the universal-debug, universal-release variants
    //             output.versionCodeOverride =
    //                     versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
    //         }
    //     }
    // }
}

dependencies {
//    compile fileTree(dir: "libs", include: ["*.jar"])
//    compile "com.android.support:appcompat-v7:23.0.1"
//    compile "com.android.support:appcompat-v7:27.1.1"
    implementation "com.facebook.react:react-native:+"  // From node_modules
    compile "com.android.support:recyclerview-v7:27.1.1"

    //compile 'lin:core:0.1.0.50'
}

//// Run this once to be able to run the application with BUCK
//// puts all compile dependencies into folder libs for BUCK to use
//task copyDownloadableDepsToLibs(type: Copy) {
//    from configurations.compile
//    into 'libs'
//}

